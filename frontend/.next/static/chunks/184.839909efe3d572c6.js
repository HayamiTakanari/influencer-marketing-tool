"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[184],{2184:function(t,a,e){e.d(a,{acceptApplication:function(){return j},addPortfolio:function(){return f},addSocialAccount:function(){return l},addTeamMember:function(){return k},applyToProject:function(){return g},createReview:function(){return q},createTeam:function(){return A},deleteNotification:function(){return _},deletePortfolio:function(){return w},deleteSocialAccount:function(){return d},deleteTeam:function(){return N},getApplicationsForMyProjects:function(){return h},getAvailableProjects:function(){return m},getComparisonData:function(){return E},getInfluencerById:function(){return r},getMyApplications:function(){return v},getMyProfile:function(){return s},getMyReviews:function(){return z},getMyTeam:function(){return P},getNotifications:function(){return S},getOverviewStats:function(){return D},getPerformanceMetrics:function(){return B},getReviewableProjects:function(){return F},login:function(){return c},markAllNotificationsAsRead:function(){return I},markNotificationAsRead:function(){return C},register:function(){return i},rejectApplication:function(){return b},removeTeamMember:function(){return T},searchInfluencers:function(){return o},updateMemberRole:function(){return R},updatePortfolio:function(){return y},updateProfile:function(){return u},updateSocialAccount:function(){return p},updateTeam:function(){return M}});let n=e(7066).Z.create({baseURL:"http://localhost:5002/api",headers:{"Content-Type":"application/json"}});n.interceptors.request.use(t=>{let a=localStorage.getItem("token");return a&&(t.headers.Authorization="Bearer ".concat(a)),t});let c=async(t,a)=>(await n.post("/auth/login",{email:t,password:a})).data,i=async t=>(await n.post("/auth/register",t)).data,o=async t=>(await n.get("/influencers/search",{params:t})).data,r=async t=>(await n.get("/influencers/".concat(t))).data,s=async()=>(await n.get("/profile/me")).data,u=async t=>(await n.put("/profile/me",t)).data,l=async t=>(await n.post("/profile/social-accounts",t)).data,p=async(t,a)=>(await n.put("/profile/social-accounts/".concat(t),a)).data,d=async t=>(await n.delete("/profile/social-accounts/".concat(t))).data,f=async t=>(await n.post("/profile/portfolio",t)).data,y=async(t,a)=>(await n.put("/profile/portfolio/".concat(t),a)).data,w=async t=>(await n.delete("/profile/portfolio/".concat(t))).data,m=async function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(await n.get("/projects/available",{params:t})).data},g=async t=>(await n.post("/projects/apply",t)).data,v=async()=>(await n.get("/projects/my-applications")).data,h=async()=>(await n.get("/projects/applications")).data,j=async t=>(await n.put("/projects/applications/".concat(t,"/accept"))).data,b=async t=>(await n.delete("/projects/applications/".concat(t,"/reject"))).data,A=async t=>(await n.post("/teams",t)).data,P=async()=>(await n.get("/teams/my-team")).data,M=async(t,a)=>(await n.put("/teams/".concat(t),a)).data,k=async(t,a)=>(await n.post("/teams/".concat(t,"/members"),a)).data,T=async(t,a)=>(await n.delete("/teams/".concat(t,"/members/").concat(a))).data,R=async(t,a,e)=>(await n.put("/teams/".concat(t,"/members/").concat(a,"/role"),e)).data,N=async t=>(await n.delete("/teams/".concat(t))).data,S=async function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,e=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(await n.get("/notifications",{params:{page:t,limit:a,unreadOnly:e}})).data},C=async t=>(await n.put("/notifications/".concat(t,"/read"))).data,I=async()=>(await n.put("/notifications/mark-all-read")).data,_=async t=>(await n.delete("/notifications/".concat(t))).data,D=async function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"month",a=arguments.length>1?arguments[1]:void 0,e=arguments.length>2?arguments[2]:void 0,c={period:t};return a&&(c.startDate=a),e&&(c.endDate=e),(await n.get("/analytics/overview",{params:c})).data},B=async()=>(await n.get("/analytics/performance")).data,E=async()=>(await n.get("/analytics/comparison")).data,q=async t=>(await n.post("/reviews",t)).data,z=async function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"received",a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:20;return(await n.get("/reviews/my-reviews",{params:{type:t,page:a,limit:e}})).data},F=async()=>(await n.get("/reviews/reviewable-projects")).data}}]);