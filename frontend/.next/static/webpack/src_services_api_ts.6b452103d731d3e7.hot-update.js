"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_services_api_ts",{

/***/ "./src/services/api.ts":
/*!*****************************!*\
  !*** ./src/services/api.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   acceptApplication: function() { return /* binding */ acceptApplication; },\n/* harmony export */   addPortfolio: function() { return /* binding */ addPortfolio; },\n/* harmony export */   addSocialAccount: function() { return /* binding */ addSocialAccount; },\n/* harmony export */   addTeamMember: function() { return /* binding */ addTeamMember; },\n/* harmony export */   applyToProject: function() { return /* binding */ applyToProject; },\n/* harmony export */   completeRegistration: function() { return /* binding */ completeRegistration; },\n/* harmony export */   confirmPayment: function() { return /* binding */ confirmPayment; },\n/* harmony export */   createPaymentIntent: function() { return /* binding */ createPaymentIntent; },\n/* harmony export */   createProject: function() { return /* binding */ createProject; },\n/* harmony export */   createReview: function() { return /* binding */ createReview; },\n/* harmony export */   createSystemAnnouncement: function() { return /* binding */ createSystemAnnouncement; },\n/* harmony export */   createTeam: function() { return /* binding */ createTeam; },\n/* harmony export */   deleteNotification: function() { return /* binding */ deleteNotification; },\n/* harmony export */   deletePortfolio: function() { return /* binding */ deletePortfolio; },\n/* harmony export */   deleteProject: function() { return /* binding */ deleteProject; },\n/* harmony export */   deleteReview: function() { return /* binding */ deleteReview; },\n/* harmony export */   deleteSocialAccount: function() { return /* binding */ deleteSocialAccount; },\n/* harmony export */   deleteTeam: function() { return /* binding */ deleteTeam; },\n/* harmony export */   getApplicationsForMyProjects: function() { return /* binding */ getApplicationsForMyProjects; },\n/* harmony export */   getAvailableProjects: function() { return /* binding */ getAvailableProjects; },\n/* harmony export */   getCategories: function() { return /* binding */ getCategories; },\n/* harmony export */   getChatList: function() { return /* binding */ getChatList; },\n/* harmony export */   getComparisonData: function() { return /* binding */ getComparisonData; },\n/* harmony export */   getInfluencerById: function() { return /* binding */ getInfluencerById; },\n/* harmony export */   getInfluencerStats: function() { return /* binding */ getInfluencerStats; },\n/* harmony export */   getMessages: function() { return /* binding */ getMessages; },\n/* harmony export */   getMyApplications: function() { return /* binding */ getMyApplications; },\n/* harmony export */   getMyProfile: function() { return /* binding */ getMyProfile; },\n/* harmony export */   getMyProjects: function() { return /* binding */ getMyProjects; },\n/* harmony export */   getMyReviews: function() { return /* binding */ getMyReviews; },\n/* harmony export */   getMyTeam: function() { return /* binding */ getMyTeam; },\n/* harmony export */   getNotifications: function() { return /* binding */ getNotifications; },\n/* harmony export */   getOverviewStats: function() { return /* binding */ getOverviewStats; },\n/* harmony export */   getPaymentHistory: function() { return /* binding */ getPaymentHistory; },\n/* harmony export */   getPaymentStats: function() { return /* binding */ getPaymentStats; },\n/* harmony export */   getPerformanceMetrics: function() { return /* binding */ getPerformanceMetrics; },\n/* harmony export */   getPrefectures: function() { return /* binding */ getPrefectures; },\n/* harmony export */   getProjectById: function() { return /* binding */ getProjectById; },\n/* harmony export */   getProjectCategories: function() { return /* binding */ getProjectCategories; },\n/* harmony export */   getRatingStats: function() { return /* binding */ getRatingStats; },\n/* harmony export */   getReviewableProjects: function() { return /* binding */ getReviewableProjects; },\n/* harmony export */   getReviewsForUser: function() { return /* binding */ getReviewsForUser; },\n/* harmony export */   getSyncStatus: function() { return /* binding */ getSyncStatus; },\n/* harmony export */   getUnreadCount: function() { return /* binding */ getUnreadCount; },\n/* harmony export */   getUnreadNotificationCount: function() { return /* binding */ getUnreadNotificationCount; },\n/* harmony export */   login: function() { return /* binding */ login; },\n/* harmony export */   markAllNotificationsAsRead: function() { return /* binding */ markAllNotificationsAsRead; },\n/* harmony export */   markMessagesAsRead: function() { return /* binding */ markMessagesAsRead; },\n/* harmony export */   markNotificationAsRead: function() { return /* binding */ markNotificationAsRead; },\n/* harmony export */   refundPayment: function() { return /* binding */ refundPayment; },\n/* harmony export */   register: function() { return /* binding */ register; },\n/* harmony export */   rejectApplication: function() { return /* binding */ rejectApplication; },\n/* harmony export */   removeTeamMember: function() { return /* binding */ removeTeamMember; },\n/* harmony export */   searchInfluencers: function() { return /* binding */ searchInfluencers; },\n/* harmony export */   sendMessage: function() { return /* binding */ sendMessage; },\n/* harmony export */   syncAllMyAccounts: function() { return /* binding */ syncAllMyAccounts; },\n/* harmony export */   syncSocialAccount: function() { return /* binding */ syncSocialAccount; },\n/* harmony export */   updateMemberRole: function() { return /* binding */ updateMemberRole; },\n/* harmony export */   updatePortfolio: function() { return /* binding */ updatePortfolio; },\n/* harmony export */   updateProfile: function() { return /* binding */ updateProfile; },\n/* harmony export */   updateProject: function() { return /* binding */ updateProject; },\n/* harmony export */   updateProjectStatus: function() { return /* binding */ updateProjectStatus; },\n/* harmony export */   updateReview: function() { return /* binding */ updateReview; },\n/* harmony export */   updateSocialAccount: function() { return /* binding */ updateSocialAccount; },\n/* harmony export */   updateTeam: function() { return /* binding */ updateTeam; },\n/* harmony export */   uploadPortfolioImage: function() { return /* binding */ uploadPortfolioImage; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\n// Determine the API base URL based on environment\nconst getApiBaseUrl = ()=>{\n    // If explicitly set via environment variable, use that\n    if (true) {\n        return \"http://localhost:5002/api\";\n    }\n    // Check if we're in a browser environment\n    if (true) {\n        const hostname = window.location.hostname;\n        // If we're on Vercel (production), use a mock API service\n        if (hostname.includes(\"vercel.app\")) {\n            // For now, use a mock backend service\n            return \"https://jsonplaceholder.typicode.com\"; // Temporary fallback\n        }\n    }\n    // Default to localhost for development\n    return \"http://localhost:5002/api\";\n};\nconst API_BASE_URL = getApiBaseUrl();\nconsole.log(\"API_BASE_URL:\", API_BASE_URL);\nconsole.log(\"process.env.NEXT_PUBLIC_API_URL:\", \"http://localhost:5002/api\");\nconsole.log(\"Window hostname:\",  true ? window.location.hostname : 0);\nconst api = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: API_BASE_URL,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\napi.interceptors.request.use((config)=>{\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n        config.headers.Authorization = \"Bearer \".concat(token);\n    }\n    return config;\n});\n// Auth\nconst login = async (email, password)=>{\n    console.log(\"Login API called with:\", {\n        email,\n        baseURL: API_BASE_URL\n    });\n    try {\n        const response = await api.post(\"/auth/login\", {\n            email,\n            password\n        });\n        console.log(\"Login successful:\", response.data);\n        return response.data;\n    } catch (error) {\n        console.error(\"Login error:\", error);\n        throw error;\n    }\n};\nconst register = async (userData)=>{\n    const response = await api.post(\"/auth/register\", userData);\n    return response.data;\n};\n// Influencer Search\nconst searchInfluencers = async (filters)=>{\n    const response = await api.get(\"/influencers/search\", {\n        params: filters\n    });\n    return response.data;\n};\nconst getInfluencerById = async (id)=>{\n    const response = await api.get(\"/influencers/\".concat(id));\n    return response.data;\n};\nconst getInfluencerStats = async (id)=>{\n    const response = await api.get(\"/influencers/\".concat(id, \"/stats\"));\n    return response.data;\n};\nconst getCategories = async ()=>{\n    const response = await api.get(\"/influencers/categories\");\n    return response.data;\n};\nconst getPrefectures = async ()=>{\n    const response = await api.get(\"/influencers/prefectures\");\n    return response.data;\n};\n// Profile Management\nconst getMyProfile = async ()=>{\n    const response = await api.get(\"/profile/me\");\n    return response.data;\n};\nconst updateProfile = async (data)=>{\n    const response = await api.put(\"/profile/me\", data);\n    return response.data;\n};\nconst completeRegistration = async ()=>{\n    const response = await api.post(\"/profile/me/complete-registration\");\n    return response.data;\n};\n// Social Accounts\nconst addSocialAccount = async (data)=>{\n    const response = await api.post(\"/profile/social-accounts\", data);\n    return response.data;\n};\nconst updateSocialAccount = async (id, data)=>{\n    const response = await api.put(\"/profile/social-accounts/\".concat(id), data);\n    return response.data;\n};\nconst deleteSocialAccount = async (id)=>{\n    const response = await api.delete(\"/profile/social-accounts/\".concat(id));\n    return response.data;\n};\n// Portfolio\nconst addPortfolio = async (data)=>{\n    const response = await api.post(\"/profile/portfolio\", data);\n    return response.data;\n};\nconst updatePortfolio = async (id, data)=>{\n    const response = await api.put(\"/profile/portfolio/\".concat(id), data);\n    return response.data;\n};\nconst deletePortfolio = async (id)=>{\n    const response = await api.delete(\"/profile/portfolio/\".concat(id));\n    return response.data;\n};\nconst uploadPortfolioImage = async (portfolioId, file)=>{\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    const response = await api.post(\"/profile/portfolio/\".concat(portfolioId, \"/image\"), formData, {\n        headers: {\n            \"Content-Type\": \"multipart/form-data\"\n        }\n    });\n    return response.data;\n};\n// Chat\nconst getChatList = async ()=>{\n    const response = await api.get(\"/chat/chats\");\n    return response.data;\n};\nconst getMessages = async function(projectId) {\n    let page = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, limit = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 50;\n    const response = await api.get(\"/chat/messages/\".concat(projectId), {\n        params: {\n            page,\n            limit\n        }\n    });\n    return response.data;\n};\nconst sendMessage = async (projectId, content)=>{\n    const response = await api.post(\"/chat/messages\", {\n        projectId,\n        content\n    });\n    return response.data;\n};\nconst markMessagesAsRead = async (projectId)=>{\n    const response = await api.put(\"/chat/messages/\".concat(projectId, \"/read\"));\n    return response.data;\n};\nconst getUnreadCount = async ()=>{\n    const response = await api.get(\"/chat/unread-count\");\n    return response.data;\n};\n// Payments\nconst createPaymentIntent = async (data)=>{\n    const response = await api.post(\"/payments/create-payment-intent\", data);\n    return response.data;\n};\nconst confirmPayment = async (data)=>{\n    const response = await api.post(\"/payments/confirm-payment\", data);\n    return response.data;\n};\nconst getPaymentHistory = async ()=>{\n    const response = await api.get(\"/payments/history\");\n    return response.data;\n};\nconst refundPayment = async (transactionId)=>{\n    const response = await api.post(\"/payments/refund/\".concat(transactionId));\n    return response.data;\n};\nconst getPaymentStats = async ()=>{\n    const response = await api.get(\"/payments/stats\");\n    return response.data;\n};\n// SNS\nconst syncSocialAccount = async (socialAccountId)=>{\n    const response = await api.post(\"/sns/sync/\".concat(socialAccountId));\n    return response.data;\n};\nconst syncAllMyAccounts = async ()=>{\n    const response = await api.post(\"/sns/sync-all\");\n    return response.data;\n};\nconst getSyncStatus = async ()=>{\n    const response = await api.get(\"/sns/sync-status\");\n    return response.data;\n};\n// Projects\nconst getAvailableProjects = async function() {\n    let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const response = await api.get(\"/projects/available\", {\n        params: filters\n    });\n    return response.data;\n};\nconst applyToProject = async (data)=>{\n    const response = await api.post(\"/projects/apply\", data);\n    return response.data;\n};\nconst getMyApplications = async ()=>{\n    const response = await api.get(\"/projects/my-applications\");\n    return response.data;\n};\nconst getApplicationsForMyProjects = async ()=>{\n    const response = await api.get(\"/projects/applications\");\n    return response.data;\n};\nconst acceptApplication = async (applicationId)=>{\n    const response = await api.put(\"/projects/applications/\".concat(applicationId, \"/accept\"));\n    return response.data;\n};\nconst rejectApplication = async (applicationId)=>{\n    const response = await api.delete(\"/projects/applications/\".concat(applicationId, \"/reject\"));\n    return response.data;\n};\nconst getProjectCategories = async ()=>{\n    const response = await api.get(\"/projects/categories\");\n    return response.data;\n};\n// Project CRUD operations\nconst createProject = async (data)=>{\n    const response = await api.post(\"/projects\", data);\n    return response.data;\n};\nconst getMyProjects = async ()=>{\n    const response = await api.get(\"/projects\");\n    return response.data;\n};\nconst getProjectById = async (projectId)=>{\n    const response = await api.get(\"/projects/\".concat(projectId));\n    return response.data;\n};\nconst updateProject = async (projectId, data)=>{\n    const response = await api.put(\"/projects/\".concat(projectId), data);\n    return response.data;\n};\nconst updateProjectStatus = async (projectId, status)=>{\n    const response = await api.put(\"/projects/\".concat(projectId, \"/status\"), {\n        status\n    });\n    return response.data;\n};\nconst deleteProject = async (projectId)=>{\n    const response = await api.delete(\"/projects/\".concat(projectId));\n    return response.data;\n};\n// Teams\nconst createTeam = async (data)=>{\n    const response = await api.post(\"/teams\", data);\n    return response.data;\n};\nconst getMyTeam = async ()=>{\n    const response = await api.get(\"/teams/my-team\");\n    return response.data;\n};\nconst updateTeam = async (teamId, data)=>{\n    const response = await api.put(\"/teams/\".concat(teamId), data);\n    return response.data;\n};\nconst addTeamMember = async (teamId, data)=>{\n    const response = await api.post(\"/teams/\".concat(teamId, \"/members\"), data);\n    return response.data;\n};\nconst removeTeamMember = async (teamId, memberId)=>{\n    const response = await api.delete(\"/teams/\".concat(teamId, \"/members/\").concat(memberId));\n    return response.data;\n};\nconst updateMemberRole = async (teamId, memberId, data)=>{\n    const response = await api.put(\"/teams/\".concat(teamId, \"/members/\").concat(memberId, \"/role\"), data);\n    return response.data;\n};\nconst deleteTeam = async (teamId)=>{\n    const response = await api.delete(\"/teams/\".concat(teamId));\n    return response.data;\n};\n// Notifications\nconst getNotifications = async function() {\n    let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 20, unreadOnly = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;\n    const response = await api.get(\"/notifications\", {\n        params: {\n            page,\n            limit,\n            unreadOnly\n        }\n    });\n    return response.data;\n};\nconst getUnreadNotificationCount = async ()=>{\n    const response = await api.get(\"/notifications/unread-count\");\n    return response.data;\n};\nconst markNotificationAsRead = async (notificationId)=>{\n    const response = await api.put(\"/notifications/\".concat(notificationId, \"/read\"));\n    return response.data;\n};\nconst markAllNotificationsAsRead = async ()=>{\n    const response = await api.put(\"/notifications/mark-all-read\");\n    return response.data;\n};\nconst deleteNotification = async (notificationId)=>{\n    const response = await api.delete(\"/notifications/\".concat(notificationId));\n    return response.data;\n};\nconst createSystemAnnouncement = async (data)=>{\n    const response = await api.post(\"/notifications/system-announcement\", data);\n    return response.data;\n};\n// Analytics\nconst getOverviewStats = async function() {\n    let period = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"month\", startDate = arguments.length > 1 ? arguments[1] : void 0, endDate = arguments.length > 2 ? arguments[2] : void 0;\n    const params = {\n        period\n    };\n    if (startDate) params.startDate = startDate;\n    if (endDate) params.endDate = endDate;\n    const response = await api.get(\"/analytics/overview\", {\n        params\n    });\n    return response.data;\n};\nconst getPerformanceMetrics = async ()=>{\n    const response = await api.get(\"/analytics/performance\");\n    return response.data;\n};\nconst getComparisonData = async ()=>{\n    const response = await api.get(\"/analytics/comparison\");\n    return response.data;\n};\n// Reviews\nconst createReview = async (data)=>{\n    const response = await api.post(\"/reviews\", data);\n    return response.data;\n};\nconst getReviewsForUser = async function(userId) {\n    let page = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, limit = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 20, rating = arguments.length > 3 ? arguments[3] : void 0;\n    const params = {\n        page,\n        limit\n    };\n    if (rating) params.rating = rating;\n    const response = await api.get(\"/reviews/user/\".concat(userId), {\n        params\n    });\n    return response.data;\n};\nconst getMyReviews = async function() {\n    let type = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"received\", page = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, limit = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 20;\n    const response = await api.get(\"/reviews/my-reviews\", {\n        params: {\n            type,\n            page,\n            limit\n        }\n    });\n    return response.data;\n};\nconst getReviewableProjects = async ()=>{\n    const response = await api.get(\"/reviews/reviewable-projects\");\n    return response.data;\n};\nconst updateReview = async (reviewId, data)=>{\n    const response = await api.put(\"/reviews/\".concat(reviewId), data);\n    return response.data;\n};\nconst deleteReview = async (reviewId)=>{\n    const response = await api.delete(\"/reviews/\".concat(reviewId));\n    return response.data;\n};\nconst getRatingStats = async (userId)=>{\n    const response = await api.get(\"/reviews/user/\".concat(userId, \"/stats\"));\n    return response.data;\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (api);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/services/api.ts\n"));

/***/ })

});