"use strict";exports.id=279,exports.ids=[279],exports.modules={4279:(a,t,e)=>{e.a(a,async(a,i)=>{try{e.d(t,{acceptApplication:()=>b,addPortfolio:()=>f,addSocialAccount:()=>w,addTeamMember:()=>S,applyToProject:()=>j,createReview:()=>L,createTeam:()=>M,deleteNotification:()=>C,deletePortfolio:()=>v,deleteSocialAccount:()=>u,deleteTeam:()=>N,getApplicationsForMyProjects:()=>A,getAvailableProjects:()=>$,getComparisonData:()=>F,getInfluencerById:()=>l,getMyApplications:()=>h,getMyProfile:()=>d,getMyReviews:()=>O,getMyTeam:()=>T,getNotifications:()=>x,getOverviewStats:()=>q,getPerformanceMetrics:()=>z,getReviewableProjects:()=>U,login:()=>r,markAllNotificationsAsRead:()=>B,markNotificationAsRead:()=>D,register:()=>n,rejectApplication:()=>P,removeTeamMember:()=>k,searchInfluencers:()=>p,updateMemberRole:()=>I,updatePortfolio:()=>g,updateProfile:()=>y,updateSocialAccount:()=>m,updateTeam:()=>R});var s=e(9648),o=a([s]);let c=(s=(o.then?(await o)():o)[0]).default.create({baseURL:"http://localhost:5002/api",headers:{"Content-Type":"application/json"}});c.interceptors.request.use(a=>{let t=localStorage.getItem("token");return t&&(a.headers.Authorization=`Bearer ${t}`),a});let r=async(a,t)=>(await c.post("/auth/login",{email:a,password:t})).data,n=async a=>(await c.post("/auth/register",a)).data,p=async a=>(await c.get("/influencers/search",{params:a})).data,l=async a=>(await c.get(`/influencers/${a}`)).data,d=async()=>(await c.get("/profile/me")).data,y=async a=>(await c.put("/profile/me",a)).data,w=async a=>(await c.post("/profile/social-accounts",a)).data,m=async(a,t)=>(await c.put(`/profile/social-accounts/${a}`,t)).data,u=async a=>(await c.delete(`/profile/social-accounts/${a}`)).data,f=async a=>(await c.post("/profile/portfolio",a)).data,g=async(a,t)=>(await c.put(`/profile/portfolio/${a}`,t)).data,v=async a=>(await c.delete(`/profile/portfolio/${a}`)).data,$=async(a={})=>(await c.get("/projects/available",{params:a})).data,j=async a=>(await c.post("/projects/apply",a)).data,h=async()=>(await c.get("/projects/my-applications")).data,A=async()=>(await c.get("/projects/applications")).data,b=async a=>(await c.put(`/projects/applications/${a}/accept`)).data,P=async a=>(await c.delete(`/projects/applications/${a}/reject`)).data,M=async a=>(await c.post("/teams",a)).data,T=async()=>(await c.get("/teams/my-team")).data,R=async(a,t)=>(await c.put(`/teams/${a}`,t)).data,S=async(a,t)=>(await c.post(`/teams/${a}/members`,t)).data,k=async(a,t)=>(await c.delete(`/teams/${a}/members/${t}`)).data,I=async(a,t,e)=>(await c.put(`/teams/${a}/members/${t}/role`,e)).data,N=async a=>(await c.delete(`/teams/${a}`)).data,x=async(a=1,t=20,e=!1)=>(await c.get("/notifications",{params:{page:a,limit:t,unreadOnly:e}})).data,D=async a=>(await c.put(`/notifications/${a}/read`)).data,B=async()=>(await c.put("/notifications/mark-all-read")).data,C=async a=>(await c.delete(`/notifications/${a}`)).data,q=async(a="month",t,e)=>{let i={period:a};return t&&(i.startDate=t),e&&(i.endDate=e),(await c.get("/analytics/overview",{params:i})).data},z=async()=>(await c.get("/analytics/performance")).data,F=async()=>(await c.get("/analytics/comparison")).data,L=async a=>(await c.post("/reviews",a)).data,O=async(a="received",t=1,e=20)=>(await c.get("/reviews/my-reviews",{params:{type:a,page:t,limit:e}})).data,U=async()=>(await c.get("/reviews/reviewable-projects")).data;i()}catch(a){i(a)}})}};